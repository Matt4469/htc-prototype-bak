!function(e){"use strict";e.fn.delayKeyup=function(t,a){var n=0,s=e(this);return e(this).keyup(function(e){clearTimeout(n),n=setTimeout(function(){t(s,e)},a)}),e(this)},e.fn.scrollTo=function(t,a){return e(this).animate({scrollTop:e(this).scrollTop()-e(this).offset().top+e(t).offset().top-20},void 0===a?400:a),this}}(jQuery);var _ajaxCall,searchData=function(){"use strict";var e={resultsPerRequest:5,resultPagePath:"search-result.htm",minSearchWords:"3",clsNameAspDotNetForm:"support-form",clsNameForm:"search-box",clsNameInput:"input-query",clsNameButtonSubmit:"button-submit",clsNameSuggestionArea:"smart-search-result-container",clsNameSuggestionList:"search-result",clsNameCloseBtn:"close-resulte-container-btn",clsNameHiddenSearchContentType:"hidden-search-content-type",clsNameHiddenSearchContentTypeDisplay:"hidden-search-content-type-display",clsNameHiddenSearchProductNameId:"hidden-search-product-name-id",clsNameHiddenSearchProductNameIdDisplay:"hidden-search-product-name-id-display"},t=!1,a={init:function(){!t&&$(".search-box").length>0&&(a.disableDefaultFromSubmit(),a.detectInputKey(),a.setupSubmit(),a.setupShowAllResultLink(),a.setupCloseResultContainerButton(),a.setupOutOfSearchAreaClick(),t=!0)},disableDefaultFromSubmit:function(){$("."+e.clsNameAspDotNetForm).on("submit",function(e){e.preventDefault()})},setupOutOfSearchAreaClick:function(){$("body").on("click",function(e){$(e.target).hasClass("search-box")||$(e.target).hasClass("icon-search")||$(e.target).hasClass("input-query")||$(e.target).hasClass("smart-search-result-container")||$(e.target).hasClass("border-area")||$(e.target).hasClass("show-all-result")||$(e.target).hasClass("button-submit")||$(e.target).hasClass("search-result")||$(e.target).hasClass("search-result-data")||$(e.target).hasClass("search-data-img")||$(e.target).hasClass("search-data-info")||$(e.target).hasClass("search-data-title")||$(e.target).hasClass("search-data-desc")||a.hideSuggestionList()})},setupCloseResultContainerButton:function(){$("."+e.clsNameCloseBtn).bind("click",function(){a.hideSuggestionList()})},showSuggestionList:function(){$("."+e.clsNameSuggestionArea).addClass("show")},hideSuggestionList:function(){var t=$("."+e.clsNameSuggestionArea),a=t.find("."+e.clsNameSuggestionList);t.removeClass("show"),a.html("")},validateQuery:function(){var t=!1;return $("."+e.clsNameForm+" ."+e.clsNameInput).val().trim().length>0&&(t=!0),t},setupSubmit:function(){$("."+e.clsNameForm+" ."+e.clsNameButtonSubmit).on("click",function(){a.goToResultPage()})},setupShowAllResultLink:function(){$("."+e.clsNameSuggestionArea+" ."+e.clsNameButtonSubmit).on("click",function(){a.goToResultPage()})},detectInputKey:function(){var t=$("."+e.clsNameForm+" ."+e.clsNameInput);t.off("click").on("click",function(){$(this).select()}),t.delayKeyup(function(t,n){n=n||window.event;var s=n.which||n.keyCode,i=String.fromCharCode(s);n.preventDefault();var r=!1;if(commonSetting.isMobile()?r=!0:(/[a-z0-9]/i.test(i)||8===s||32===s)&&(r=!0),r){var o=t.val(),l=e.minSearchWords;a.hideSuggestionList(),o.length>=l?$("."+e.clsNameForm).hasClass("show-suggestion-list")&&a.getJsonData():a.cancleAjaxCall()}a.setupDownAndUpKeyEvent(s)})},setupDownAndUpKeyEvent:function(t){var n,s,i,r=!1,o=$("."+e.clsNameSuggestionArea),l=o.find("."+e.clsNameSuggestionList),c=l.find("li").length,u=l.find("li > a.active").length;$("."+e.clsNameForm+" ."+e.clsNameInput);c>0&&(r=!0),13===t&&(r&&u>0?location.href=l.find("li > a.active").attr("href"):a.goToResultPage()),40===t&&r&&(n=0,0===u?s=0:(n=l.find("li > a.active").parent().index(),(s=n+1)===c&&(s=0)),l.find("li > a").removeClass("active"),l.find("li").eq(s).children("a").addClass("active"),l.scrollTo(l.find("li > a.active"))),38===t&&r&&(n=0,0===l.find("li > a.active").length?i=0:(n=l.find("li > a.active").parent().index(),(i=n-1)<0&&(i=c-1)),l.find("li > a").removeClass("active"),l.find("li").eq(i).children("a").addClass("active"),l.scrollTo(l.find("li > a.active")))},setupUrlParams:function(){var t=$("."+e.clsNameHiddenSearchContentType),a=$("."+e.clsNameHiddenSearchContentTypeDisplay),n=$("."+e.clsNameHiddenSearchProductNameId),s=$("."+e.clsNameHiddenSearchProductNameIdDisplay),i="",r="",o="",l="";return t.length>0&&a.length>0&&""!==t.val()&&""!==a.val()&&(i="&content_type="+encodeURIComponent(t.val()),r="&content_type_display="+encodeURIComponent(a.val())),n.length>0&&s.length>0&&""!==n.val()&&""!==s.val()&&(o="&product_name_id="+encodeURIComponent(n.val()),l="&product_name_id_display="+encodeURIComponent(s.val())),i+r+o+l},goToResultPage:function(){if(a.validateQuery()){var t,n=$("."+e.clsNameForm+" ."+e.clsNameInput);t=commonSetting.isPrototypeHost()?e.resultPagePath:"/"+$("body").data("site")+"/support/search.aspx",location.href=t+"?q="+encodeURIComponent(n.val().trim())+a.setupUrlParams()}},stripHTML:function(e){var t=document.createElement("div");return t.innerHTML=e,t.textContent||t.innerText},findMeta:function(e,t){var a=$(e),n="";return a.each(function(e,a){if(a.N===t)return void(n=a.V)}),n},cancleAjaxCall:function(){void 0!==_ajaxCall&&_ajaxCall.abort()},setupAjaxCall:function(t,n){var s,i,r=$("body").data("site"),o=0,l="support-"+r,c=e.resultsPerRequest,u=$.url(),d=(u.param("p_name"),$("."+e.clsNameForm+" ."+e.clsNameInput)),m=d.val(),h="",p=$("."+e.clsNameHiddenSearchContentType),f=$("."+e.clsNameHiddenSearchProductNameId);if(a.validateQuery()){void 0!==t&&(o=(t-1)*c),void 0!==n&&(c=n),"www.htc.com"===u.attr("host")?(s="//ws.htc.com/htc-search-1.1/query/gsa/search","//www.htc.com"):(s="//dev2-ws.htc.com/htc-search-1.1/query/gsa/search","//dev-www.htc.com"),void 0!==p&&p.length>0&&""!==p.val()&&(h="content_type:"+p.val()),void 0!==f&&f.length>0&&""!==f.val()&&(""!==h&&(h+="."),h+="product_name_id:"+f.val()),i={output:"xml_no_dtd",ie:"utf8",oe:"utf8",getfields:"*",filter:0,site:"default_collection",client:l,q:m,start:o,num:c,as_dt:"i",requiredfields:h};return{baseSearchURL:s,queryParam:i}}return null},getJsonData:function(){var t=a.setupAjaxCall();a.cancleAjaxCall(),_ajaxCall=$.ajax({type:"GET",url:t.baseSearchURL,data:t.queryParam,dataType:"json",jsonp:!0,async:!0,cache:!1,success:function(t){var n=$("."+e.clsNameSuggestionArea),s=n.find("."+e.clsNameSuggestionList);a.buildResultTemplate(t,s,function(e){e>0&&a.showSuggestionList()})},error:function(e){}})},buildResultTemplate:function(e,t,n){var s,i=0,r="",o="",l="",c="";if(void 0!==e.GSP&&void 0!==e.GSP.RES)if(i=e.GSP.RES.M,void 0!==e.GSP.RES.R.length){s=e.GSP.RES.R;for(var u=0;u<s.length;u++){r=a.findMeta(s[u].MT,"content_type"),o=a.stripHTML(s[u].T),l=a.stripHTML(a.findMeta(s[u].MT,"description"))?a.stripHTML(a.findMeta(s[u].MT,"description")):a.stripHTML(s[u].S),c=s[u].U;var d={title:o,desc:l,url:c,icon:r};t.append(tmpl("search-result-tmp",d))}}else{var m=e.GSP.RES.R;r=a.findMeta(m.MT,"content_type"),o=a.stripHTML(m.T),l=a.findMeta(m.MT,"description")?a.findMeta(m.MT,"description"):a.stripHTML(m.S),c=m.U;var h={title:o,desc:l,url:c,icon:r};t.append(tmpl("search-result-tmp",h))}n(i)}};return a}();$(document).ready(function(){"use strict";searchData.init()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
