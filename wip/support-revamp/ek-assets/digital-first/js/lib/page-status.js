var stateStatus=function(){"use strict";return{check:function(){var t=!1,n=$.url(),o=$(".board-large-info"),e=n.param("showmenu"),s=n.param("showcontent");void 0!==e&&(o.removeClass("m-show-content"),o.addClass("m-show-menu"),$("body").removeClass("product-content-page-init"),t=!0),void 0!==s&&(o.removeClass("m-show-menu"),o.addClass("m-show-content"),$("body").removeClass("product-content-page-init"),t=!0),t||($("body").hasClass("m-landing-page")?(o.addClass("m-show-menu"),$("body").addClass("product-content-page-init")):o.addClass("m-show-content"))}}}(),menus=function(){"use strict";var t={init:function(){t.resetLinksForMobile(),t.backtoClick()},backtoClick:function(){$(".back-to-menu").unbind("click").bind("click",function(){History.pushState({rand:Math.random(),top:1},"","?showmenu=1")})},resetLinksForMobile:function(){location.href;$.each($(".nav li"),function(t,n){var o=$(this).find("a").attr("href");commonSetting.isMobile()&&void 0!==o&&$(this).find("a").attr("href",o+"?showcontent=1")})}};return t}();$(document).ready(function(){"use strict";menus.init(),stateStatus.check()}),$(window).resize(function(t){"use strict";commonSetting.forcePageReload()}),function(t,n){"use strict";"file:"===document.location.protocol&&alert("The HTML5 History API (and thus History.js) do not work on files, please upload it to a server."),History.Adapter.bind(t,"statechange",function(){stateStatus.check()})}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wYWdlLXN0YXR1cy5qcyJdLCJuYW1lcyI6WyJzdGF0ZVN0YXR1cyIsImNoZWNrIiwiaGFzU2V0dXAiLCJ1cmwiLCIkIiwibWFpbkluZm8iLCJwYXJhbU1lbnUiLCJwYXJhbSIsInBhcmFtQ29udGVudCIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJoYXNDbGFzcyIsIm1lbnVzIiwiaW5pdCIsInJlc2V0TGlua3NGb3JNb2JpbGUiLCJiYWNrdG9DbGljayIsInVuYmluZCIsImJpbmQiLCJIaXN0b3J5IiwicHVzaFN0YXRlIiwicmFuZCIsIk1hdGgiLCJyYW5kb20iLCJ0b3AiLCJsb2NhdGlvbiIsImhyZWYiLCJlYWNoIiwiaW5kZXgiLCJ2YWwiLCJpbnNpZGVMaW5rIiwidGhpcyIsImZpbmQiLCJhdHRyIiwiY29tbW9uU2V0dGluZyIsImlzTW9iaWxlIiwiZG9jdW1lbnQiLCJyZWFkeSIsIndpbmRvdyIsInJlc2l6ZSIsImV2ZW50IiwiZm9yY2VQYWdlUmVsb2FkIiwidW5kZWZpbmVkIiwicHJvdG9jb2wiLCJhbGVydCIsIkFkYXB0ZXIiXSwibWFwcGluZ3MiOiJBQU1BLEdBQUlBLGFBQWUsV0FDZixZQW1DQSxRQWhDSUMsTUFBTyxXQUNILEdBQUlDLElBQVcsRUFDWEMsRUFBTUMsRUFBRUQsTUFDUkUsRUFBV0QsRUFBRSxxQkFDYkUsRUFBWUgsRUFBSUksTUFBTSxZQUN0QkMsRUFBZUwsRUFBSUksTUFBTSxtQkFFSixLQUFkRCxJQUNQRCxFQUFTSSxZQUFZLGtCQUNyQkosRUFBU0ssU0FBUyxlQUNsQk4sRUFBRSxRQUFRSyxZQUFZLDZCQUN0QlAsR0FBVyxPQUdhLEtBQWpCTSxJQUNQSCxFQUFTSSxZQUFZLGVBQ3JCSixFQUFTSyxTQUFTLGtCQUNsQk4sRUFBRSxRQUFRSyxZQUFZLDZCQUN0QlAsR0FBVyxHQUdWQSxJQUNHRSxFQUFFLFFBQVFPLFNBQVMsbUJBQ25CTixFQUFTSyxTQUFTLGVBQ2xCTixFQUFFLFFBQVFNLFNBQVMsOEJBRW5CTCxFQUFTSyxTQUFTLHdCQVNsQ0UsTUFBUyxXQUNULFlBRUEsSUFBSUEsSUFDQUMsS0FBTSxXQUNGRCxFQUFNRSxzQkFDTkYsRUFBTUcsZUFFVkEsWUFBYSxXQUNUWCxFQUFFLGlCQUFpQlksT0FBTyxTQUFTQyxLQUFLLFFBQVMsV0FDN0NDLFFBQVFDLFdBQVlDLEtBQU1DLEtBQUtDLFNBQVVDLElBQUssR0FBSyxHQUFJLGtCQUcvRFQsb0JBQXFCLFdBQ0FVLFNBQVNDLElBQzFCckIsR0FBRXNCLEtBQUt0QixFQUFFLFdBQVksU0FBU3VCLEVBQU9DLEdBQ2pDLEdBQUlDLEdBQWF6QixFQUFFMEIsTUFBTUMsS0FBSyxLQUFLQyxLQUFLLE9BQ3BDQyxlQUFjQyxnQkFDWSxLQUFmTCxHQUNQekIsRUFBRTBCLE1BQU1DLEtBQUssS0FBS0MsS0FBSyxPQUFRSCxFQUFhLHFCQVFoRSxPQUFPakIsS0FHWFIsR0FBRStCLFVBQVVDLE1BQU0sV0FDZCxZQUNBeEIsT0FBTUMsT0FDTmIsWUFBWUMsVUFHaEJHLEVBQUVpQyxRQUFRQyxPQUFPLFNBQVNDLEdBQ3RCLFlBQ0FOLGVBQWNPLG9CQUdsQixTQUFVSCxFQUFRSSxHQUNkLFlBRW1DLFdBQS9CTixTQUFTWCxTQUFTa0IsVUFDbEJDLE1BQU0sbUdBSVZ6QixRQUFRMEIsUUFBUTNCLEtBQUtvQixFQUFRLGNBQWUsV0FDeENyQyxZQUFZQyxXQUdqQm9DIiwiZmlsZSI6ImxpYi9wYWdlLXN0YXR1cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vUmVxdWlyZWQgSlNcbi8vIDxzY3JpcHQgc3JjPVwiZWstYXNzZXRzL2RpZ2l0YWwtZmlyc3QvanMvdmVuZG9yL3B1cmwuanNcIj48L3NjcmlwdD5cbi8vIDxzY3JpcHQgc3JjPVwiZWstYXNzZXRzL2RpZ2l0YWwtZmlyc3QvanMvdmVuZG9yL2pxdWVyeS5oaXN0b3J5LmpzXCI+PC9zY3JpcHQ+XG5cblxuLyogZ2xvYmFsIEhpc3RvcnksIGNvbW1vblNldHRpbmcgKi9cbnZhciBzdGF0ZVN0YXR1cyA9IChmdW5jdGlvbigpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgc3RhdGVTdGF0dXMgPSB7XG4gICAgICAgIGNoZWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBoYXNTZXR1cCA9IGZhbHNlLFxuICAgICAgICAgICAgICAgIHVybCA9ICQudXJsKCksXG4gICAgICAgICAgICAgICAgbWFpbkluZm8gPSAkKCcuYm9hcmQtbGFyZ2UtaW5mbycpLFxuICAgICAgICAgICAgICAgIHBhcmFtTWVudSA9IHVybC5wYXJhbSgnc2hvd21lbnUnKSxcbiAgICAgICAgICAgICAgICBwYXJhbUNvbnRlbnQgPSB1cmwucGFyYW0oJ3Nob3djb250ZW50Jyk7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFyYW1NZW51ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIG1haW5JbmZvLnJlbW92ZUNsYXNzKCdtLXNob3ctY29udGVudCcpO1xuICAgICAgICAgICAgICAgIG1haW5JbmZvLmFkZENsYXNzKCdtLXNob3ctbWVudScpO1xuICAgICAgICAgICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygncHJvZHVjdC1jb250ZW50LXBhZ2UtaW5pdCcpO1xuICAgICAgICAgICAgICAgIGhhc1NldHVwID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBwYXJhbUNvbnRlbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgbWFpbkluZm8ucmVtb3ZlQ2xhc3MoJ20tc2hvdy1tZW51Jyk7XG4gICAgICAgICAgICAgICAgbWFpbkluZm8uYWRkQ2xhc3MoJ20tc2hvdy1jb250ZW50Jyk7XG4gICAgICAgICAgICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdwcm9kdWN0LWNvbnRlbnQtcGFnZS1pbml0Jyk7XG4gICAgICAgICAgICAgICAgaGFzU2V0dXAgPSB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIWhhc1NldHVwKSB7XG4gICAgICAgICAgICAgICAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygnbS1sYW5kaW5nLXBhZ2UnKSkge1xuICAgICAgICAgICAgICAgICAgICBtYWluSW5mby5hZGRDbGFzcygnbS1zaG93LW1lbnUnKTtcbiAgICAgICAgICAgICAgICAgICAgJCgnYm9keScpLmFkZENsYXNzKCdwcm9kdWN0LWNvbnRlbnQtcGFnZS1pbml0Jyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbWFpbkluZm8uYWRkQ2xhc3MoJ20tc2hvdy1jb250ZW50Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiBzdGF0ZVN0YXR1cztcbn0oKSk7XG5cbnZhciBtZW51cyA9IChmdW5jdGlvbigpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgbWVudXMgPSB7XG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbWVudXMucmVzZXRMaW5rc0Zvck1vYmlsZSgpO1xuICAgICAgICAgICAgbWVudXMuYmFja3RvQ2xpY2soKTtcbiAgICAgICAgfSxcbiAgICAgICAgYmFja3RvQ2xpY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgJCgnLmJhY2stdG8tbWVudScpLnVuYmluZCgnY2xpY2snKS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIEhpc3RvcnkucHVzaFN0YXRlKHsgcmFuZDogTWF0aC5yYW5kb20oKSwgdG9wOiAxIH0sICcnLCAnP3Nob3dtZW51PTEnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICByZXNldExpbmtzRm9yTW9iaWxlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBjdXJyZW50VXJsID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgICAgICQuZWFjaCgkKCcubmF2IGxpJyksIGZ1bmN0aW9uKGluZGV4LCB2YWwpIHtcbiAgICAgICAgICAgICAgICB2YXIgaW5zaWRlTGluayA9ICQodGhpcykuZmluZCgnYScpLmF0dHIoJ2hyZWYnKTtcbiAgICAgICAgICAgICAgICBpZiAoY29tbW9uU2V0dGluZy5pc01vYmlsZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaW5zaWRlTGluayAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuZmluZCgnYScpLmF0dHIoJ2hyZWYnLCBpbnNpZGVMaW5rICsgJz9zaG93Y29udGVudD0xJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiBtZW51cztcbn0oKSk7XG5cbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgICBtZW51cy5pbml0KCk7XG4gICAgc3RhdGVTdGF0dXMuY2hlY2soKTtcbn0pO1xuXG4kKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIGNvbW1vblNldHRpbmcuZm9yY2VQYWdlUmVsb2FkKCk7XG59KTtcblxuKGZ1bmN0aW9uKHdpbmRvdywgdW5kZWZpbmVkKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIC8vIENoZWNrIExvY2F0aW9uXG4gICAgaWYgKGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sID09PSAnZmlsZTonKSB7XG4gICAgICAgIGFsZXJ0KCdUaGUgSFRNTDUgSGlzdG9yeSBBUEkgKGFuZCB0aHVzIEhpc3RvcnkuanMpIGRvIG5vdCB3b3JrIG9uIGZpbGVzLCBwbGVhc2UgdXBsb2FkIGl0IHRvIGEgc2VydmVyLicpO1xuICAgIH1cblxuICAgIC8vU3RhdGUgY2hhbmdlXG4gICAgSGlzdG9yeS5BZGFwdGVyLmJpbmQod2luZG93LCAnc3RhdGVjaGFuZ2UnLCBmdW5jdGlvbigpIHsgLy8gTm90ZTogV2UgYXJlIHVzaW5nIHN0YXRlY2hhbmdlIGluc3RlYWQgb2YgcG9wc3RhdGVcbiAgICAgICAgc3RhdGVTdGF0dXMuY2hlY2soKTtcbiAgICB9KTtcblxufSkod2luZG93KTsiXX0=
