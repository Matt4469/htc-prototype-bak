var backupTransfer=function(){"use strict";var t,e={itemsInRow:function(){var t=0;return $(".product-item").each(function(){if($(this).prev().length>0){if($(this).position().top!==$(this).prev().position().top)return!1;t++}else t++}),t},detectAlignStart:function(){var t=e.itemsInRow(),i=$(".product-item").length;$(".flex-box-area").removeClass("align-start"),i%t!=0&&$(".flex-box-area").addClass("align-start")},appendAfterItem:function(t){for(var i=e.itemsInRow(),o=1,n=i;n<$(".product-item").length;n+=i){if(t<n)return n-1;o+=1}},scrollToSubItem:function(t){var e=$(".flex-box-area").find(".detail-item"),i=new TimelineLite;i.add(TweenLite.set(e,{height:"auto"})),i.add(TweenLite.from(e,.5,{height:t}),"-=0.5"),i.call(function(){e.addClass("active")},[],this,"-=0.2"),i.play()},collapseCarrier:function(){console.log("test");var t=$(".flex-box-area").find(".detail-item"),e=new TimelineLite;e.add(TweenLite.to(t,.5,{height:0}),"+=0.4"),e.call(function(){t.removeClass("active")},[],this),e.play()},expandList:function(t){var i=$(".flex-box-area").find(".detail-item"),o=0;i.length>0?(o=i.height(),i.css("height","auto").removeClass("active").html("")):i=$('<div class="detail-item"></div>'),$(".product-item").each(function(t,n){$(this);if($(this).hasClass("selected")){var a=t,s=$(this).find(".product-name").text(),r=e.appendAfterItem(a),c=($(this).find(".related-products").children("a").size(),'<div class="related-product-group popup-window"><div class="btn-close"></div><div class="popup-title m-popup-title">'+s+"</div>"+$(this).find(".related-products").html()+"</div>");void 0===r?i.append(c).insertAfter($(".product-item").last()):i.append(c).insertAfter($(".product-item").eq(r)),commonSetting.isMobile()?(i.addClass("active"),commonSetting.addMobilePopupFix()):e.scrollToSubItem(o),e.closeBtnClick(),commonSetting.addMobilePopupFix()}}),e.detectAlignStart()},restoreTopicSelection:function(i){$(".product-item").removeClass("selected"),$(".product-item").eq(t.val()).addClass("selected"),e.expandList(!0)},topicClick:function(){$(".product-item").off("click").on("click",function(i){$(this).hasClass("selected")||(t.val($(this).index()),e.pushParams())})},closeBtnClick:function(){$(".btn-close").click(function(){e.collapseCarrier(),t.val(""),e.pushParams()})},initObj:function(){t=$(".hidden-seleted-topic")},updateHiddenInput:function(i){var o=$.url(),n=o.param("topic");e.initObj(),t.val(""),void 0!==n&&t.val(n),i()},pushParams:function(){var e=t.val(),i="";void 0!==e&&e.length>0&&(i+="&topic="+e),History.pushState({rand:Math.random(),topic:e},document.title,"?"+i)},restorePageStatus:function(i){e.topicClick(),""!==t.val()?e.restoreTopicSelection(i):!commonSetting.isMobile()&&i?($(".product-item").eq(0).addClass("selected"),e.expandList(!1)):($(".detail-item").removeClass("active"),commonSetting.removeMobilePopupFix(),setTimeout(function(){$(".product-item").removeClass("selected"),$(".detail-item").remove()},500))}};return e}();$(window).resize(function(){"use strict";commonSetting.forcePageReload()}),$(document).ready(function(){"use strict"}),function(t,e){"use strict";"file:"===document.location.protocol&&alert("The HTML5 History API (and thus History.js) do not work on files, please upload it to a server."),backupTransfer.updateHiddenInput(function(){backupTransfer.restorePageStatus(!0)}),History.Adapter.bind(t,"statechange",function(){History.getState();backupTransfer.updateHiddenInput(function(){backupTransfer.restorePageStatus(!1)})})}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
