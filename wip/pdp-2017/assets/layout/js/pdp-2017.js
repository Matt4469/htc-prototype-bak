var controller=new ScrollMagic.Controller({loglevel:3}),isDesktopView=!0;$(window).resize(function(){"use strict";commonSetting.forcePageReload()}),$(document).ready(function(){"use strict";commonSetting.isMobile()&&(isDesktopView=!1),infoBar.init(),modalVideo.init(),videoBgSection.init(),videoSwitch.init(),jumpingAnimation.init()});var videoSwitch=function(){"use strict";var e,i={init:function(){$(".video-switch").length>0&&(commonSetting.isMobile()?$(window).load(function(){i.setupCarousel()}):(e=0,i.setupPoster(0),i.setupCaption(0),i.setupIconClick()))},setupCarousel:function(){function e(e){var i,t=0;$(".video-switch .owl-item.active").each(function(){var e=parseInt($(this).height(),10);i=$(this).find(".image-block").height(),t=t>=e?t:e}),setTimeout(function(){$(".video-switch .owl-carousel").css("height",t),$(".video-switch .owl-stage-outer").css("height",t),$(".video-switch .owl-dots").css("top",i)},10)}$(".video-switch .owl-carousel").owlCarousel({items:1,autoHeight:!0,onInitialized:e,onResized:e,onTranslated:e})},setupCaption:function(e){var i=$(".video-switch .text-area .caption-block"),t=$(".video-switch .carousel-container .carousel-item").eq(e).find(".caption-block").html();i.html(t)},setupPoster:function(e){var i=$(".video-switch .video-container"),t=$(".video-switch .carousel-container .carousel-item").eq(e).data("poster-path");void 0!==t&&i.attr("poster",t)},setupIconClick:function(){$(".video-switch .icons-group .icon-item").on("click",function(t){if(t.preventDefault(),!$(this).hasClass("selected")){var o=$(this).index(),n=$(".video-switch .icons-group .icon-item"),a=$(".video-switch .text-area .caption-block"),l=(a.height(),$(".video-switch .video-container")),s=(l.height(),l[0]),c=$(".video-switch .carousel-container .carousel-item").eq(o).data("video-path");$(".video-switch .carousel-container .carousel-item").eq(o).data("poster-path"),$(".video-switch .carousel-container .carousel-item").eq(o).find(".caption-block").html();e=o,n.removeClass("selected"),$(this).addClass("selected"),i.setupPoster(o),i.setupCaption(o),l.attr("loop","loop"),s.pause(),s.src=c,s.load(),s.play()}})}};return i}(),jumpingAnimation=function(){"use strict";var e={init:function(){$(".jumping-animation").length>0&&(commonSetting.isMobile()?$(window).load(function(){e.setupCarousel()}):e.setupIconClick())},setupCarousel:function(){function e(e){var i,t=0;$(".jumping-animation .owl-item.active").each(function(){var e=parseInt($(this).height(),10);i=$(this).find(".image-block").height(),t=t>=e?t:e}),$(".jumping-animation .owl-carousel").css("height",t),$(".jumping-animation .owl-stage-outer").css("height",t),$(".jumping-animation .owl-dots").css("top",i)}$(".jumping-animation .owl-carousel").owlCarousel({items:1,autoHeight:!0,onInitialized:e,onResized:e,onTranslated:e})},setupIconClick:function(){$(".jumping-animation .icons-group .icon-item").on("click",function(e){if(e.preventDefault(),!$(this).hasClass("selected")){var i=$(this).index(),t=$(".jumping-animation .icons-group .icon-item"),o=$(".jumping-animation .text-area .caption-block"),n=o.height()+"px",a=$(".jumping-animation .image-animation"),l=$(".jumping-animation .image-animation .main-image"),s=$(".jumping-animation .carousel-container .carousel-item").eq(i).find(".image-block").html(),c=$(".jumping-animation .carousel-container .carousel-item").eq(i).find(".caption-block").html();a.removeClass("show"),t.removeClass("selected"),$(this).addClass("selected"),o.html(c),o.height()+"px";var r=new TimelineLite({immediateRender:!1});r.add(TweenLite.set(o,{height:"auto"})),r.add(TweenLite.from(o,.3,{height:n})),r.call(function(){l.html(s),a.addClass("show")},[],this,"+=0.4"),r.play()}}),$(".jumping-animation .icons-group .icon-item").eq(0).trigger("click")}};return e}(),modalVideo=function(){"use strict";var e={init:function(){var e=$(".modal-video");e.length>0&&$.each(e,function(e,i){var t=($(this),$(this).find(".play-modal-video-btn")),o=$(".modal-video-play-block"),n=t.data("vtype"),a=t.data("vid");t.on("click",function(e){e.preventDefault(),"youtube"===n?youtubeVideo.init(a,o):youkuVideo.init(a,o)})})},setupCloseModalBtn:function(){$(".modal-overlap-container .btn-close").off("click").on("click",function(i){i.preventDefault(),e.hideModal()})},showModal:function(){$(".modal-overlap-container").addClass("show"),$("body").addClass("fixed")},hideModal:function(){$(".modal-overlap-container").removeClass("show"),$("body").removeClass("fixed"),$(".modal-video-play-block").html('<div id="player"></div>')}};return e}(),videoBgSection=function(){"use strict";var e={init:function(){$(".video-bg").length>0&&e.setupVideoSource()},setupVideoSource:function(){commonSetting.isMobile()||$.each($(".video-bg"),function(i,t){var o=$(this),n=o[0],a=o.find("video"),l=a[0],s=a.data("video-path");new ScrollMagic.Scene({triggerElement:n,offset:-700}).addTo(controller).on("enter",function(i){"enter"!==i.type||a.hasClass("loaded")||(l.pause(),l.src=s,l.load(),a.addClass("loaded"),e.setupScrollAndPlay(o,n,a,l))})})},getPosition:function(e,i){var t=0,o=0,n=5,a=5,l=e.height();return void 0!==i.data("top-trigger-playing")&&(n=i.data("top-trigger-playing")),t=parseInt(l*(n/100),10),void 0!==i.data("bottom-trigger-playing")&&(a=i.data("bottom-trigger-playing")),o=l-parseInt(l*(a/100),10)-t,[t,o]},updatePosition:function(i,t,o){var n=e.getPosition(i,t),a=n[0],l=n[1];o.offset(a),o.duration(l)},setupScrollAndPlay:function(i,t,o,n){if(!commonSetting.isMobile()){var a,l=o.data("loop"),s=e.getPosition(i,o),c=s[0],r=s[1];o.height(),i.height();a=new ScrollMagic.Scene({triggerElement:t,offset:c,duration:r}).addTo(controller).on("enter leave",function(e){"enter"===e.type&&!o.hasClass("played")&&o.hasClass("loaded")&&(n.play(),o.addClass("played"))}),n.addEventListener("ended",function(){void 0!==l&&"no"===l?o.removeClass("played"):(o.attr("loop","loop"),n.play())},!1),$(window).resize(function(t){e.updatePosition(i,o,a)})}}};return e}(),infoBar=function(){"use strict";var e={init:function(){$(".info-bar").length>0&&(e.setupSticky(),e.setupScroll(),e.setupToggleMobileMenu())},setupSticky:function(){var e=(new ScrollMagic.Scene({triggerElement:".info-bar",triggerHook:"onLeave"}).setPin(".info-bar").addTo(controller),$(".info-bar")),i=$(window);$("body").hasClass("rtl")?i.scroll(function(t){"fixed"===e.css("position")?e.css({left:"auto",right:i.scrollLeft()+"px"}):e.css({left:"auto",right:"0px"})}):i.scroll(function(t){"fixed"===e.css("position")?e.css({left:-i.scrollLeft()+"px"}):e.css({left:"0px"})})},setupScroll:function(){$(".scroll-btn").on("click",function(i){i.preventDefault();var t,o=$(this).data("scroll-to");void 0!==o&&(commonSetting.isMobile()&&e.toggleMenu(),t=$("#"+o).offset().top-$(".info-bar").height(),$("html, body").animate({scrollTop:t},1e3))})},setupToggleMobileMenu:function(){commonSetting.isMobile()&&$(".m-toggle-menu").on("click",function(i){i.preventDefault(),e.toggleMenu()})},toggleMenu:function(){$(".m-toggle-menu").toggleClass("active"),$(".scroll-btn-group").toggleClass("show")}};return e}(),commonSetting=function(){"use strict";var e={mobileMaxReserlution:function(){return 720},isMobile:function(){return $(window).width()<=e.mobileMaxReserlution()},forcePageReload:function(){$(window).width()<=e.mobileMaxReserlution()&&isDesktopView&&location.reload(),$(window).width()>e.mobileMaxReserlution()&&!isDesktopView&&location.reload()}};return e}(),youkuVideo=function(){"use strict";return{init:function(e){new YKU.Player("player",{styleid:"0",client_id:"2a8fda48fc709b73",vid:e,newPlayer:!1,autoplay:!0,show_related:!1,events:{onPlayEnd:function(){modalVideo.hideModal()},onPlayerReady:function(){modalVideo.showModal(),modalVideo.setupCloseModalBtn()}}})},resetPlayerHeight:function(){"youku"===$(".player-container").data("vtype")&&$("#player").height($("picture").height())}}}(),youtubeVideo=function(){"use strict";return{init:function(e){function i(e){e.target.playVideo(),modalVideo.showModal(),modalVideo.setupCloseModalBtn()}function t(e){0===e.data&&modalVideo.hideModal()}var o;!function(){o=new YT.Player("player",{height:"390",width:"640",videoId:e,events:{onReady:i,onStateChange:t}})}()}}}();!function(e){"use strict";e.fn.videobject=function(i){var t=e.extend({flash:'<iframe width="mywidth" height="myheight" src="myurl" frameborder="0" allowfullscreen></iframe>',id:"XMTcwMDMxNTA4",url:"youtube",width:"500",height:"282",warning:"You need Flash Player enabled."},i||{}),o=function(){var e=!1;try{new ActiveXObject("ShockwaveFlash.ShockwaveFlash")&&(e=!0)}catch(i){void 0!==navigator.mimeTypes["application/x-shockwave-flash"]&&(e=!0)}return e};return this.empty().html(function(i){var n,a=!0,l="http"+(/^https/.test(location.protocol)?"s":"")+"://www.youtube.com/embed/myid?autoplay=1&wmode=opaque";return e("html").hasClass("desktop")?(a=o(),n="http://static.youku.com/v/swf/qplayer.swf?VideoIDS=myid=&isAutoPlay=true&isShowRelatedVideo=false&embedid=-&showAd=0"):n="http://static.youku.com/v1.0.0149/v/swf/loader.swf?VideoIDS=myid&quality=high&isAutoPlay=true&winType=adshow",a?(11===i.length?t.id=l.replace(/myid/,i):(t.id=n.replace(/myid/,i),t.flash="<embed src='myurl' allowFullScreen='true' quality='high' width='mywidth' height='myheight' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed>"),t.flash.replace(/myurl/,t.id).replace(/mywidth/,t.width).replace(/myheight/,t.height)):t.warning}(t.id))}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBkcC0yMDE3LmpzIl0sIm5hbWVzIjpbImNvbnRyb2xsZXIiLCJTY3JvbGxNYWdpYyIsIkNvbnRyb2xsZXIiLCJsb2dsZXZlbCIsImlzRGVza3RvcFZpZXciLCIkIiwid2luZG93IiwicmVzaXplIiwiY29tbW9uU2V0dGluZyIsImZvcmNlUGFnZVJlbG9hZCIsImRvY3VtZW50IiwicmVhZHkiLCJpc01vYmlsZSIsImluZm9CYXIiLCJpbml0IiwibW9kYWxWaWRlbyIsInZpZGVvQmdTZWN0aW9uIiwidmlkZW9Td2l0Y2giLCJqdW1waW5nQW5pbWF0aW9uIiwiX3NlbGVjdGVkSW5kZXgiLCJsZW5ndGgiLCJsb2FkIiwic2V0dXBDYXJvdXNlbCIsInNldHVwUG9zdGVyIiwic2V0dXBDYXB0aW9uIiwic2V0dXBJY29uQ2xpY2siLCJzZXRPd2xIZWlnaHQiLCJldmVudCIsImltYWdlSGVpZ2h0IiwibWF4SGVpZ2h0IiwiZWFjaCIsInRoaXNIZWlnaHQiLCJwYXJzZUludCIsInRoaXMiLCJoZWlnaHQiLCJmaW5kIiwic2V0VGltZW91dCIsImNzcyIsIm93bENhcm91c2VsIiwiaXRlbXMiLCJhdXRvSGVpZ2h0Iiwib25Jbml0aWFsaXplZCIsIm9uUmVzaXplZCIsIm9uVHJhbnNsYXRlZCIsImlkeCIsIiRjdXJyZW50SXRlbSIsInNlbGVjdGVkQ2FwdGlvbkh0bWwiLCJlcSIsImh0bWwiLCJtYWluVmlkZW8iLCJzZWxlY3RlZFZpZGVvUG9zdGVyIiwiZGF0YSIsImF0dHIiLCJvbiIsInByZXZlbnREZWZhdWx0IiwiaGFzQ2xhc3MiLCJzZWxlY3RlZEluZGV4IiwiaW5kZXgiLCJhbGxJY29ucyIsInZpZGVvQmxvY2siLCJzZWxlY3RlZFZpZGVvUGF0aCIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJwYXVzZSIsInNyYyIsInBsYXkiLCJzZXRPd2xTdGFnZUhlaWdodCIsImN1cnJlbnRJdGVtSGVpZ2h0IiwiJGltYWdlQmxvY2siLCIkbWFpbkltYWdlIiwic2VsZWN0ZWRJbWFnZUh0bWwiLCJ0aW1lTGluZU9iaiIsIlRpbWVsaW5lTGl0ZSIsImltbWVkaWF0ZVJlbmRlciIsImFkZCIsIlR3ZWVuTGl0ZSIsInNldCIsImZyb20iLCJjYWxsIiwidHJpZ2dlciIsInZhbCIsInBsYXlCdG4iLCJwbGF5QXJlYSIsInZpZGVvVHlwZSIsInZpZGVvSWQiLCJ5b3V0dWJlVmlkZW8iLCJ5b3VrdVZpZGVvIiwic2V0dXBDbG9zZU1vZGFsQnRuIiwib2ZmIiwiaGlkZU1vZGFsIiwic2hvd01vZGFsIiwic2V0dXBWaWRlb1NvdXJjZSIsInNlY3Rpb25PYmoiLCJzZWN0aW9uRG9tIiwidmlkZW9PYmoiLCJ2aWRlb0RvbSIsInZpZGVvUGF0aCIsIlNjZW5lIiwidHJpZ2dlckVsZW1lbnQiLCJvZmZzZXQiLCJhZGRUbyIsImUiLCJ0eXBlIiwic2V0dXBTY3JvbGxBbmRQbGF5IiwiZ2V0UG9zaXRpb24iLCJ0b3BUcmlnZ2VyIiwiYm90dG9tVHJpZ2dlciIsImRlZmF1bHRUb3AiLCJkZWZhdWx0Qm90dG9tIiwic2VjdGlvbkhlaWdodCIsInVwZGF0ZVBvc2l0aW9uIiwic2NlbmUiLCJwb3NpdGlvbkFycmF5IiwiZHVyYXRpb24iLCJsb29wIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNldHVwU3RpY2t5Iiwic2V0dXBTY3JvbGwiLCJzZXR1cFRvZ2dsZU1vYmlsZU1lbnUiLCIkaGVhZGVyRGl2IiwidHJpZ2dlckhvb2siLCJzZXRQaW4iLCIkcm93RGl2Iiwic2Nyb2xsIiwibGVmdCIsInJpZ2h0Iiwic2Nyb2xsTGVmdCIsInNjcm9sbFBvc2l0aW9uIiwic2Nyb2xsVG9JdGVtIiwidG9nZ2xlTWVudSIsInRvcCIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJ0b2dnbGVDbGFzcyIsIm1vYmlsZU1heFJlc2VybHV0aW9uIiwid2lkdGgiLCJsb2NhdGlvbiIsInJlbG9hZCIsInZpZCIsIllLVSIsIlBsYXllciIsInN0eWxlaWQiLCJjbGllbnRfaWQiLCJuZXdQbGF5ZXIiLCJhdXRvcGxheSIsInNob3dfcmVsYXRlZCIsImV2ZW50cyIsIm9uUGxheUVuZCIsIm9uUGxheWVyUmVhZHkiLCJyZXNldFBsYXllckhlaWdodCIsInRhcmdldCIsInBsYXlWaWRlbyIsIm9uUGxheWVyU3RhdGVDaGFuZ2UiLCJwbGF5ZXIiLCJZVCIsIm9uUmVhZHkiLCJvblN0YXRlQ2hhbmdlIiwiZm4iLCJ2aWRlb2JqZWN0IiwiY2FsbGVyU2V0dGluZ3MiLCJzZXR0aW5ncyIsImV4dGVuZCIsImZsYXNoIiwiaWQiLCJ1cmwiLCJ3YXJuaW5nIiwiY2hlY2tGbGFzaCIsImhhc0ZsYXNoIiwiQWN0aXZlWE9iamVjdCIsInVuZGVmaW5lZCIsIm5hdmlnYXRvciIsIm1pbWVUeXBlcyIsImVtcHR5IiwidXJpIiwieWsiLCJva0ZsYXNoIiwieXRiIiwidGVzdCIsInByb3RvY29sIiwicmVwbGFjZSIsImpRdWVyeSJdLCJtYXBwaW5ncyI6IkFBU0EsR0FBSUEsWUFBYSxHQUFJQyxhQUFZQyxZQUM3QkMsU0FBVSxJQUVWQyxlQUFnQixDQUNwQkMsR0FBRUMsUUFBUUMsT0FBTyxXQUNiLFlBQ0FDLGVBQWNDLG9CQUVsQkosRUFBRUssVUFBVUMsTUFBTSxXQUNkLFlBQ0lILGVBQWNJLGFBQ2RSLGVBQWdCLEdBRXBCUyxRQUFRQyxPQUNSQyxXQUFXRCxPQUNYRSxlQUFlRixPQUNmRyxZQUFZSCxPQUNaSSxpQkFBaUJKLFFBS3JCLElBQUlHLGFBQWUsV0FDZixZQUNBLElBQUlFLEdBQ0FGLEdBQ0FILEtBQU0sV0FDRVQsRUFBRSxpQkFBaUJlLE9BQVMsSUFDeEJaLGNBQWNJLFdBRWRQLEVBQUVDLFFBQVFlLEtBQUssV0FFWEosRUFBWUssbUJBSWhCSCxFQUFpQixFQUNqQkYsRUFBWU0sWUFBWSxHQUN4Qk4sRUFBWU8sYUFBYSxHQUN6QlAsRUFBWVEsb0JBSXhCSCxjQUFlLFdBU1gsUUFBU0ksR0FBYUMsR0FDbEIsR0FDSUMsR0FEQUMsRUFBWSxDQUVoQnhCLEdBQUUsa0NBQWtDeUIsS0FBSyxXQUNyQyxHQUFJQyxHQUFhQyxTQUFTM0IsRUFBRTRC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RUFBRTRKLFFBRWJDLE1BQU8sa0dBQ1BDLEdBQUksZ0JBQ0pDLElBQUssVUFDTDdCLE1BQU8sTUFDUHJHLE9BQVEsTUFDUm1JLFFBQVMsa0NBQ1ZOLE9BQ0NPLEVBQWEsV0FFYixHQUFJQyxJQUFXLENBQ2YsS0FDYSxHQUFJQyxlQUFjLG1DQUV2QkQsR0FBVyxHQUVqQixNQUFPbEUsT0FDd0RvRSxLQUF6REMsVUFBVUMsVUFBVSxtQ0FDcEJKLEdBQVcsR0FHbkIsTUFBT0EsR0E0QlgsT0FBT3RJLE1BQUsySSxRQUFRNUgsS0ExQkosU0FBUzZILEdBQ3JCLEdBQ0lDLEdBREFDLEdBQVUsRUFFVkMsRUFBTSxRQUFVLFNBQVNDLEtBQUt6QyxTQUFTMEMsVUFBWSxJQUFNLElBQU0sdURBUW5FLE9BUEk3SyxHQUFFLFFBQVFrRCxTQUFTLFlBQ25Cd0gsRUFBVVQsSUFDVlEsRUFBSyx3SEFHTEEsRUFBSywrR0FFTEMsR0FFbUIsS0FBZkYsRUFBSXpKLE9BRUo0SSxFQUFTRyxHQUFLYSxFQUFJRyxRQUFRLE9BQVFOLElBR2xDYixFQUFTRyxHQUFLVyxFQUFHSyxRQUFRLE9BQVFOLEdBQ2pDYixFQUFTRSxNQUFRLHNMQUVJRixFQUFTRSxNQUFNaUIsUUFBUSxRQUFTbkIsRUFBU0csSUFBSWdCLFFBQVEsVUFBV25CLEVBQVN6QixPQUFPNEMsUUFBUSxXQUFZbkIsRUFBUzlILFNBRS9IOEgsRUFBU0ssU0FHV0wsRUFBU0csT0FFakRpQiIsImZpbGUiOiJwZHAtMjAxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsIFNjcm9sbE1hZ2ljLCBUaW1lbGluZUxpdGUsIFR3ZWVuTGl0ZSwgWUtVLCBZVCovXG4vKipcblxuICAgIFRPRE86XG4gICAgLSBjb21wcmVzcyBpbWFnZXNcbiAgICAtYWNjZXNzb3J5IG1vYmlsZVxuICAgIC1sb2dvIHJlcGxhY2VtZW50IFxuXG4gKi9cbnZhciBjb250cm9sbGVyID0gbmV3IFNjcm9sbE1hZ2ljLkNvbnRyb2xsZXIoe1xuICAgIGxvZ2xldmVsOiAzXG59KTtcbnZhciBpc0Rlc2t0b3BWaWV3ID0gdHJ1ZTtcbiQod2luZG93KS5yZXNpemUoZnVuY3Rpb24oKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIGNvbW1vblNldHRpbmcuZm9yY2VQYWdlUmVsb2FkKCk7XG59KTtcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgICBpZiAoY29tbW9uU2V0dGluZy5pc01vYmlsZSgpKSB7XG4gICAgICAgIGlzRGVza3RvcFZpZXcgPSBmYWxzZTtcbiAgICB9XG4gICAgaW5mb0Jhci5pbml0KCk7XG4gICAgbW9kYWxWaWRlby5pbml0KCk7XG4gICAgdmlkZW9CZ1NlY3Rpb24uaW5pdCgpO1xuICAgIHZpZGVvU3dpdGNoLmluaXQoKTtcbiAgICBqdW1waW5nQW5pbWF0aW9uLmluaXQoKTtcbn0pO1xuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbj0gICAgICAgU2VjdGlvbjogVmlkZW8gU3dpdGNoICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xudmFyIHZpZGVvU3dpdGNoID0gKGZ1bmN0aW9uKCkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgICB2YXIgX3NlbGVjdGVkSW5kZXg7XG4gICAgdmFyIHZpZGVvU3dpdGNoID0ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICgkKCcudmlkZW8tc3dpdGNoJykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGlmIChjb21tb25TZXR0aW5nLmlzTW9iaWxlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9zZXR1cCBjYXJvdXNlbFxuICAgICAgICAgICAgICAgICAgICAkKHdpbmRvdykubG9hZChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJ1biBjb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICB2aWRlb1N3aXRjaC5zZXR1cENhcm91c2VsKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vc2V0dXAgaWNvbiBjbGlja1xuICAgICAgICAgICAgICAgICAgICBfc2VsZWN0ZWRJbmRleCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHZpZGVvU3dpdGNoLnNldHVwUG9zdGVyKDApO1xuICAgICAgICAgICAgICAgICAgICB2aWRlb1N3aXRjaC5zZXR1cENhcHRpb24oMCk7XG4gICAgICAgICAgICAgICAgICAgIHZpZGVvU3dpdGNoLnNldHVwSWNvbkNsaWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzZXR1cENhcm91c2VsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJy52aWRlby1zd2l0Y2ggLm93bC1jYXJvdXNlbCcpLm93bENhcm91c2VsKHtcbiAgICAgICAgICAgICAgICBpdGVtczogMSxcbiAgICAgICAgICAgICAgICBhdXRvSGVpZ2h0OiB0cnVlLFxuICAgICAgICAgICAgICAgIG9uSW5pdGlhbGl6ZWQ6IHNldE93bEhlaWdodCxcbiAgICAgICAgICAgICAgICBvblJlc2l6ZWQ6IHNldE93bEhlaWdodCxcbiAgICAgICAgICAgICAgICBvblRyYW5zbGF0ZWQ6IHNldE93bEhlaWdodFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIHNldE93bEhlaWdodChldmVudCkge1xuICAgICAgICAgICAgICAgIHZhciBtYXhIZWlnaHQgPSAwLFxuICAgICAgICAgICAgICAgICAgICBpbWFnZUhlaWdodDtcbiAgICAgICAgICAgICAgICAkKCcudmlkZW8tc3dpdGNoIC5vd2wtaXRlbS5hY3RpdmUnKS5lYWNoKGZ1bmN0aW9uKCkgeyAvLyBMT09QIFRIUk9VR0ggQUNUSVZFIElURU1TXG4gICAgICAgICAgICAgICAgICAgIHZhciB0aGlzSGVpZ2h0ID0gcGFyc2VJbnQoJCh0aGlzKS5oZWlnaHQoKSwgMTApO1xuICAgICAgICAgICAgICAgICAgICBpbWFnZUhlaWdodCA9ICQodGhpcykuZmluZCgnLmltYWdlLWJsb2NrJykuaGVpZ2h0KCk7XG4gICAgICAgICAgICAgICAgICAgIG1heEhlaWdodCA9IChtYXhIZWlnaHQgPj0gdGhpc0hlaWdodCA/IG1heEhlaWdodCA6IHRoaXNIZWlnaHQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICQoJy52aWRlby1zd2l0Y2ggLm93bC1jYXJvdXNlbCcpLmNzcygnaGVpZ2h0JywgbWF4SGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgJCgnLnZpZGVvLXN3aXRjaCAub3dsLXN0YWdlLW91dGVyJykuY3NzKCdoZWlnaHQnLCBtYXhIZWlnaHQpOyAvLyBDT1JSRUNUIERSQUctQVJFQSBTTyBCVVRUT05TIEFSRSBDTElDS0FCTEVcbiAgICAgICAgICAgICAgICAgICAgJCgnLnZpZGVvLXN3aXRjaCAub3dsLWRvdHMnKS5jc3MoJ3RvcCcsIGltYWdlSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICB9LCAxMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHNldHVwQ2FwdGlvbjogZnVuY3Rpb24oaWR4KSB7XG4gICAgICAgICAgICB2YXIgJGN1cnJlbnRJdGVtID0gJCgnLnZpZGVvLXN3aXRjaCAudGV4dC1hcmVhIC5jYXB0aW9uLWJsb2NrJyksXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRDYXB0aW9uSHRtbCA9ICQoJy52aWRlby1zd2l0Y2ggLmNhcm91c2VsLWNvbnRhaW5lciAuY2Fyb3VzZWwtaXRlbScpLmVxKGlkeCkuZmluZCgnLmNhcHRpb24tYmxvY2snKS5odG1sKCk7XG4gICAgICAgICAgICAkY3VycmVudEl0ZW0uaHRtbChzZWxlY3RlZENhcHRpb25IdG1sKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0dXBQb3N0ZXI6IGZ1bmN0aW9uKGlkeCkge1xuICAgICAgICAgICAgdmFyIG1haW5WaWRlbyA9ICQoJy52aWRlby1zd2l0Y2ggLnZpZGVvLWNvbnRhaW5lcicpLFxuICAgICAgICAgICAgICAgIHNlbGVjdGVkVmlkZW9Qb3N0ZXIgPSAkKCcudmlkZW8tc3dpdGNoIC5jYXJvdXNlbC1jb250YWluZXIgLmNhcm91c2VsLWl0ZW0nKS5lcShpZHgpLmRhdGEoJ3Bvc3Rlci1wYXRoJyk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHNlbGVjdGVkVmlkZW9Qb3N0ZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgbWFpblZpZGVvLmF0dHIoJ3Bvc3RlcicsIHNlbGVjdGVkVmlkZW9Qb3N0ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzZXR1cEljb25DbGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKCcudmlkZW8tc3dpdGNoIC5pY29ucy1ncm91cCAuaWNvbi1pdGVtJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIC8qIEFjdCBvbiB0aGUgZXZlbnQgKi9cbiAgICAgICAgICAgICAgICBpZiAoISQodGhpcykuaGFzQ2xhc3MoJ3NlbGVjdGVkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGVjdGVkSW5kZXggPSAkKHRoaXMpLmluZGV4KCksXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGxJY29ucyA9ICQoJy52aWRlby1zd2l0Y2ggLmljb25zLWdyb3VwIC5pY29uLWl0ZW0nKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICRjdXJyZW50SXRlbSA9ICQoJy52aWRlby1zd2l0Y2ggLnRleHQtYXJlYSAuY2FwdGlvbi1ibG9jaycpLFxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEl0ZW1IZWlnaHQgPSAkY3VycmVudEl0ZW0uaGVpZ2h0KCkgKyAncHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3SGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICAgICAgbWFpblZpZGVvID0gJCgnLnZpZGVvLXN3aXRjaCAudmlkZW8tY29udGFpbmVyJyksXG4gICAgICAgICAgICAgICAgICAgICAgICBtYWluVmlkZW9IZWlnaHQgPSBtYWluVmlkZW8uaGVpZ2h0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0Jsb2NrID0gbWFpblZpZGVvWzBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRWaWRlb1BhdGggPSAkKCcudmlkZW8tc3dpdGNoIC5jYXJvdXNlbC1jb250YWluZXIgLmNhcm91c2VsLWl0ZW0nKS5lcShzZWxlY3RlZEluZGV4KS5kYXRhKCd2aWRlby1wYXRoJyksXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFZpZGVvUG9zdGVyID0gJCgnLnZpZGVvLXN3aXRjaCAuY2Fyb3VzZWwtY29udGFpbmVyIC5jYXJvdXNlbC1pdGVtJykuZXEoc2VsZWN0ZWRJbmRleCkuZGF0YSgncG9zdGVyLXBhdGgnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkQ2FwdGlvbkh0bWwgPSAkKCcudmlkZW8tc3dpdGNoIC5jYXJvdXNlbC1jb250YWluZXIgLmNhcm91c2VsLWl0ZW0nKS5lcShzZWxlY3RlZEluZGV4KS5maW5kKCcuY2FwdGlvbi1ibG9jaycpLmh0bWwoKTtcbiAgICAgICAgICAgICAgICAgICAgX3NlbGVjdGVkSW5kZXggPSBzZWxlY3RlZEluZGV4O1xuICAgICAgICAgICAgICAgICAgICBhbGxJY29ucy5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gbWFpblZpZGVvLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ3NlbGVjdGVkJyk7XG4gICAgICAgICAgICAgICAgICAgIHZpZGVvU3dpdGNoLnNldHVwUG9zdGVyKHNlbGVjdGVkSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB2aWRlb1N3aXRjaC5zZXR1cENhcHRpb24oc2VsZWN0ZWRJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIG1haW5WaWRlby5hdHRyKCdsb29wJywgJ2xvb3AnKTtcbiAgICAgICAgICAgICAgICAgICAgdmlkZW9CbG9jay5wYXVzZSgpO1xuICAgICAgICAgICAgICAgICAgICB2aWRlb0Jsb2NrLnNyYyA9IHNlbGVjdGVkVmlkZW9QYXRoO1xuICAgICAgICAgICAgICAgICAgICB2aWRlb0Jsb2NrLmxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgdmlkZW9CbG9jay5wbGF5KCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIG1haW5WaWRlby5hZGRDbGFzcygnc2hvdycpO1xuICAgICAgICAgICAgICAgICAgICAvLyB9LDUwMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB2aWRlb1N3aXRjaDtcbn0oKSk7XG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuPSAgICAgICBTZWN0aW9uOiBKdW1waW5nIEFuaW1hdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICA9XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xudmFyIGp1bXBpbmdBbmltYXRpb24gPSAoZnVuY3Rpb24oKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIHZhciBqdW1waW5nQW5pbWF0aW9uID0ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICgkKCcuanVtcGluZy1hbmltYXRpb24nKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvbW1vblNldHRpbmcuaXNNb2JpbGUoKSkge1xuICAgICAgICAgICAgICAgICAgICAkKHdpbmRvdykubG9hZChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGp1bXBpbmdBbmltYXRpb24uc2V0dXBDYXJvdXNlbCgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBqdW1waW5nQW5pbWF0aW9uLnNldHVwSWNvbkNsaWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzZXR1cENhcm91c2VsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJy5qdW1waW5nLWFuaW1hdGlvbiAub3dsLWNhcm91c2VsJykub3dsQ2Fyb3VzZWwoe1xuICAgICAgICAgICAgICAgIGl0ZW1zOiAxLFxuICAgICAgICAgICAgICAgIGF1dG9IZWlnaHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgb25Jbml0aWFsaXplZDogc2V0T3dsU3RhZ2VIZWlnaHQsXG4gICAgICAgICAgICAgICAgb25SZXNpemVkOiBzZXRPd2xTdGFnZUhlaWdodCxcbiAgICAgICAgICAgICAgICBvblRyYW5zbGF0ZWQ6IHNldE93bFN0YWdlSGVpZ2h0XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gc2V0T3dsU3RhZ2VIZWlnaHQoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWF4SGVpZ2h0ID0gMCxcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VIZWlnaHQ7XG4gICAgICAgICAgICAgICAgJCgnLmp1bXBpbmctYW5pbWF0aW9uIC5vd2wtaXRlbS5hY3RpdmUnKS5lYWNoKGZ1bmN0aW9uKCkgeyAvLyBMT09QIFRIUk9VR0ggQUNUSVZFIElURU1TXG4gICAgICAgICAgICAgICAgICAgIHZhciB0aGlzSGVpZ2h0ID0gcGFyc2VJbnQoJCh0aGlzKS5oZWlnaHQoKSwgMTApO1xuICAgICAgICAgICAgICAgICAgICBpbWFnZUhlaWdodCA9ICQodGhpcykuZmluZCgnLmltYWdlLWJsb2NrJykuaGVpZ2h0KCk7XG4gICAgICAgICAgICAgICAgICAgIG1heEhlaWdodCA9IChtYXhIZWlnaHQgPj0gdGhpc0hlaWdodCA/IG1heEhlaWdodCA6IHRoaXNIZWlnaHQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICQoJy5qdW1waW5nLWFuaW1hdGlvbiAub3dsLWNhcm91c2VsJykuY3NzKCdoZWlnaHQnLCBtYXhIZWlnaHQpO1xuICAgICAgICAgICAgICAgICQoJy5qdW1waW5nLWFuaW1hdGlvbiAub3dsLXN0YWdlLW91dGVyJykuY3NzKCdoZWlnaHQnLCBtYXhIZWlnaHQpOyAvLyBDT1JSRUNUIERSQUctQVJFQSBTTyBCVVRUT05TIEFSRSBDTElDS0FCTEVcbiAgICAgICAgICAgICAgICAkKCcuanVtcGluZy1hbmltYXRpb24gLm93bC1kb3RzJykuY3NzKCd0b3AnLCBpbWFnZUhlaWdodCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHNldHVwSWNvbkNsaWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJy5qdW1waW5nLWFuaW1hdGlvbiAuaWNvbnMtZ3JvdXAgLmljb24taXRlbScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAvKiBBY3Qgb24gdGhlIGV2ZW50ICovXG4gICAgICAgICAgICAgICAgaWYgKCEkKHRoaXMpLmhhc0NsYXNzKCdzZWxlY3RlZCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWxlY3RlZEluZGV4ID0gJCh0aGlzKS5pbmRleCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWxsSWNvbnMgPSAkKCcuanVtcGluZy1hbmltYXRpb24gLmljb25zLWdyb3VwIC5pY29uLWl0ZW0nKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICRjdXJyZW50SXRlbSA9ICQoJy5qdW1waW5nLWFuaW1hdGlvbiAudGV4dC1hcmVhIC5jYXB0aW9uLWJsb2NrJyksXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SXRlbUhlaWdodCA9ICRjdXJyZW50SXRlbS5oZWlnaHQoKSArICdweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdIZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW1hZ2VCbG9jayA9ICQoJy5qdW1waW5nLWFuaW1hdGlvbiAuaW1hZ2UtYW5pbWF0aW9uJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAkbWFpbkltYWdlID0gJCgnLmp1bXBpbmctYW5pbWF0aW9uIC5pbWFnZS1hbmltYXRpb24gLm1haW4taW1hZ2UnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkSW1hZ2VIdG1sID0gJCgnLmp1bXBpbmctYW5pbWF0aW9uIC5jYXJvdXNlbC1jb250YWluZXIgLmNhcm91c2VsLWl0ZW0nKS5lcShzZWxlY3RlZEluZGV4KS5maW5kKCcuaW1hZ2UtYmxvY2snKS5odG1sKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZENhcHRpb25IdG1sID0gJCgnLmp1bXBpbmctYW5pbWF0aW9uIC5jYXJvdXNlbC1jb250YWluZXIgLmNhcm91c2VsLWl0ZW0nKS5lcShzZWxlY3RlZEluZGV4KS5maW5kKCcuY2FwdGlvbi1ibG9jaycpLmh0bWwoKTtcbiAgICAgICAgICAgICAgICAgICAgJGltYWdlQmxvY2sucmVtb3ZlQ2xhc3MoJ3Nob3cnKTtcbiAgICAgICAgICAgICAgICAgICAgYWxsSWNvbnMucmVtb3ZlQ2xhc3MoJ3NlbGVjdGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ3NlbGVjdGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICRjdXJyZW50SXRlbS5odG1sKHNlbGVjdGVkQ2FwdGlvbkh0bWwpO1xuICAgICAgICAgICAgICAgICAgICBuZXdIZWlnaHQgPSAkY3VycmVudEl0ZW0uaGVpZ2h0KCkgKyAncHgnO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGltZUxpbmVPYmogPSBuZXcgVGltZWxpbmVMaXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltbWVkaWF0ZVJlbmRlcjogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIC8vZXhwYW5kIHByb2R1Y3QgZGV0YWlsIGxpc3RcbiAgICAgICAgICAgICAgICAgICAgdGltZUxpbmVPYmouYWRkKFR3ZWVuTGl0ZS5zZXQoJGN1cnJlbnRJdGVtLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICdhdXRvJ1xuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgIHRpbWVMaW5lT2JqLmFkZChUd2VlbkxpdGUuZnJvbSgkY3VycmVudEl0ZW0sIDAuMywge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBjdXJyZW50SXRlbUhlaWdodFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgIC8vc2hvdyBwcm9kdWN0IGl0ZW1zXG4gICAgICAgICAgICAgICAgICAgIHRpbWVMaW5lT2JqLmNhbGwoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkbWFpbkltYWdlLmh0bWwoc2VsZWN0ZWRJbWFnZUh0bWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJGltYWdlQmxvY2suYWRkQ2xhc3MoJ3Nob3cnKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgW10sIHRoaXMsICcrPTAuNCcpO1xuICAgICAgICAgICAgICAgICAgICAvL3N0YXJ0IFxuICAgICAgICAgICAgICAgICAgICB0aW1lTGluZU9iai5wbGF5KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAkKCcuanVtcGluZy1hbmltYXRpb24gLmljb25zLWdyb3VwIC5pY29uLWl0ZW0nKS5lcSgwKS50cmlnZ2VyKCdjbGljaycpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4ganVtcGluZ0FuaW1hdGlvbjtcbn0oKSk7XG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuPSAgICAgICBTZWN0aW9uOiBtb2RhbCB2aWRlbyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID1cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG52YXIgbW9kYWxWaWRlbyA9IChmdW5jdGlvbigpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgdmFyIG1vZGFsVmlkZW8gPSB7XG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIG1vZGFsVmlkZW8gPSAkKCcubW9kYWwtdmlkZW8nKTtcbiAgICAgICAgICAgIGlmIChtb2RhbFZpZGVvLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAkLmVhY2gobW9kYWxWaWRlbywgZnVuY3Rpb24oaW5kZXgsIHZhbCkge1xuICAgICAgICAgICAgICAgICAgICAvKiBpdGVyYXRlIHRocm91Z2ggYXJyYXkgb3Igb2JqZWN0ICovXG4gICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50U2VjdGlvbiA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5QnRuID0gJCh0aGlzKS5maW5kKCcucGxheS1tb2RhbC12aWRlby1idG4nKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXlBcmVhID0gJCgnLm1vZGFsLXZpZGVvLXBsYXktYmxvY2snKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvVHlwZSA9IHBsYXlCdG4uZGF0YSgndnR5cGUnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvSWQgPSBwbGF5QnRuLmRhdGEoJ3ZpZCcpO1xuICAgICAgICAgICAgICAgICAgICBwbGF5QnRuLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLyogQWN0IG9uIHRoZSBldmVudCAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZpZGVvVHlwZSA9PT0gJ3lvdXR1YmUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9Zb3V0dWJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeW91dHViZVZpZGVvLmluaXQodmlkZW9JZCwgcGxheUFyZWEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL1lvdUt1XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeW91a3VWaWRlby5pbml0KHZpZGVvSWQsIHBsYXlBcmVhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHNldHVwQ2xvc2VNb2RhbEJ0bjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKCcubW9kYWwtb3ZlcmxhcC1jb250YWluZXIgLmJ0bi1jbG9zZScpLm9mZignY2xpY2snKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgLyogQWN0IG9uIHRoZSBldmVudCAqL1xuICAgICAgICAgICAgICAgIG1vZGFsVmlkZW8uaGlkZU1vZGFsKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2hvd01vZGFsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJy5tb2RhbC1vdmVybGFwLWNvbnRhaW5lcicpLmFkZENsYXNzKCdzaG93Jyk7XG4gICAgICAgICAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ2ZpeGVkJyk7XG4gICAgICAgIH0sXG4gICAgICAgIGhpZGVNb2RhbDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKCcubW9kYWwtb3ZlcmxhcC1jb250YWluZXInKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICAgICAgICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdmaXhlZCcpO1xuICAgICAgICAgICAgJCgnLm1vZGFsLXZpZGVvLXBsYXktYmxvY2snKS5odG1sKCc8ZGl2IGlkPVwicGxheWVyXCI+PC9kaXY+Jyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBtb2RhbFZpZGVvO1xufSgpKTtcbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG49ICAgICAgIFNlY3Rpb246IHZpZGVvIEJHICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbnZhciB2aWRlb0JnU2VjdGlvbiA9IChmdW5jdGlvbigpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgdmFyIHZpZGVvQmdTZWN0aW9uID0ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICgkKCcudmlkZW8tYmcnKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgdmlkZW9CZ1NlY3Rpb24uc2V0dXBWaWRlb1NvdXJjZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzZXR1cFZpZGVvU291cmNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICghY29tbW9uU2V0dGluZy5pc01vYmlsZSgpKSB7XG4gICAgICAgICAgICAgICAgJC5lYWNoKCQoJy52aWRlby1iZycpLCBmdW5jdGlvbihpbmRleCwgdmFsKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWN0aW9uT2JqID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb25Eb20gPSBzZWN0aW9uT2JqWzBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9PYmogPSBzZWN0aW9uT2JqLmZpbmQoJ3ZpZGVvJyksXG4gICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0RvbSA9IHZpZGVvT2JqWzBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9QYXRoID0gdmlkZW9PYmouZGF0YSgndmlkZW8tcGF0aCcpO1xuICAgICAgICAgICAgICAgICAgICAvLyAuYWRkSW5kaWNhdG9ycyh7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBuYW1lOiAndmlkZW8gKGR1cmF0aW9uOiAwKSdcbiAgICAgICAgICAgICAgICAgICAgLy8gfSlcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNjZW5lID0gbmV3IFNjcm9sbE1hZ2ljLlNjZW5lKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyaWdnZXJFbGVtZW50OiBzZWN0aW9uRG9tLFxuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAtNzAwXG4gICAgICAgICAgICAgICAgICAgIH0pLmFkZFRvKGNvbnRyb2xsZXIpLm9uKCdlbnRlcicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLnR5cGUgPT09ICdlbnRlcicgJiYgIXZpZGVvT2JqLmhhc0NsYXNzKCdsb2FkZWQnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvRG9tLnBhdXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9Eb20uc3JjID0gdmlkZW9QYXRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvRG9tLmxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRlb09iai5hZGRDbGFzcygnbG9hZGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9CZ1NlY3Rpb24uc2V0dXBTY3JvbGxBbmRQbGF5KHNlY3Rpb25PYmosIHNlY3Rpb25Eb20sIHZpZGVvT2JqLCB2aWRlb0RvbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBnZXRQb3NpdGlvbjogZnVuY3Rpb24oc2VjdGlvbk9iaiwgdmlkZW9PYmopIHtcbiAgICAgICAgICAgIHZhciB0b3BUcmlnZ2VyID0gMCxcbiAgICAgICAgICAgICAgICBib3R0b21UcmlnZ2VyID0gMCxcbiAgICAgICAgICAgICAgICBkZWZhdWx0VG9wID0gNSxcbiAgICAgICAgICAgICAgICBkZWZhdWx0Qm90dG9tID0gNSxcbiAgICAgICAgICAgICAgICBzZWN0aW9uSGVpZ2h0ID0gc2VjdGlvbk9iai5oZWlnaHQoKTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmlkZW9PYmouZGF0YSgndG9wLXRyaWdnZXItcGxheWluZycpICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIGRlZmF1bHRUb3AgPSB2aWRlb09iai5kYXRhKCd0b3AtdHJpZ2dlci1wbGF5aW5nJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0b3BUcmlnZ2VyID0gcGFyc2VJbnQoc2VjdGlvbkhlaWdodCAqIChkZWZhdWx0VG9wIC8gMTAwKSwgMTApO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2aWRlb09iai5kYXRhKCdib3R0b20tdHJpZ2dlci1wbGF5aW5nJykgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgZGVmYXVsdEJvdHRvbSA9IHZpZGVvT2JqLmRhdGEoJ2JvdHRvbS10cmlnZ2VyLXBsYXlpbmcnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJvdHRvbVRyaWdnZXIgPSBzZWN0aW9uSGVpZ2h0IC0gcGFyc2VJbnQoc2VjdGlvbkhlaWdodCAqIChkZWZhdWx0Qm90dG9tIC8gMTAwKSwgMTApIC0gdG9wVHJpZ2dlcjtcbiAgICAgICAgICAgIHJldHVybiBbdG9wVHJpZ2dlciwgYm90dG9tVHJpZ2dlcl07XG4gICAgICAgIH0sXG4gICAgICAgIHVwZGF0ZVBvc2l0aW9uOiBmdW5jdGlvbihzZWN0aW9uT2JqLCB2aWRlb09iaiwgc2NlbmUpIHtcbiAgICAgICAgICAgIHZhciBwb3NpdGlvbkFycmF5ID0gdmlkZW9CZ1NlY3Rpb24uZ2V0UG9zaXRpb24oc2VjdGlvbk9iaiwgdmlkZW9PYmopLFxuICAgICAgICAgICAgICAgIHRvcFRyaWdnZXIgPSBwb3NpdGlvbkFycmF5WzBdLFxuICAgICAgICAgICAgICAgIGJvdHRvbVRyaWdnZXIgPSBwb3NpdGlvbkFycmF5WzFdO1xuICAgICAgICAgICAgc2NlbmUub2Zmc2V0KHRvcFRyaWdnZXIpO1xuICAgICAgICAgICAgc2NlbmUuZHVyYXRpb24oYm90dG9tVHJpZ2dlcik7XG4gICAgICAgIH0sXG4gICAgICAgIHNldHVwU2Nyb2xsQW5kUGxheTogZnVuY3Rpb24oc2VjdGlvbk9iaiwgc2VjdGlvbkRvbSwgdmlkZW9PYmosIHZpZGVvRG9tKSB7XG4gICAgICAgICAgICBpZiAoIWNvbW1vblNldHRpbmcuaXNNb2JpbGUoKSkge1xuICAgICAgICAgICAgICAgIC8vIC5hZGRJbmRpY2F0b3JzKHtcbiAgICAgICAgICAgICAgICAvLyAgICAgbmFtZTogJ3Njcm9sbCAoc0hlaWdodDonICsgc2VjdGlvbkhlaWdodCArICcgfCB2SGVpZ2h0OicgKyB2aWRlb0hlaWdodCArICcgfCBvZmZzZXQ6JyArIHRvcFRyaWdnZXIgKyAnIHwgZHVyYXRpb246JyArIGJvdHRvbVRyaWdnZXIgKyAnKSdcbiAgICAgICAgICAgICAgICAvLyB9KVxuICAgICAgICAgICAgICAgIHZhciBzY2VuZSxcbiAgICAgICAgICAgICAgICAgICAgbG9vcCA9IHZpZGVvT2JqLmRhdGEoJ2xvb3AnKSxcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb25BcnJheSA9IHZpZGVvQmdTZWN0aW9uLmdldFBvc2l0aW9uKHNlY3Rpb25PYmosIHZpZGVvT2JqKSxcbiAgICAgICAgICAgICAgICAgICAgdG9wVHJpZ2dlciA9IHBvc2l0aW9uQXJyYXlbMF0sXG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbVRyaWdnZXIgPSBwb3NpdGlvbkFycmF5WzFdLFxuICAgICAgICAgICAgICAgICAgICB2aWRlb0hlaWdodCA9IHZpZGVvT2JqLmhlaWdodCgpLFxuICAgICAgICAgICAgICAgICAgICBzZWN0aW9uSGVpZ2h0ID0gc2VjdGlvbk9iai5oZWlnaHQoKTtcbiAgICAgICAgICAgICAgICBzY2VuZSA9IG5ldyBTY3JvbGxNYWdpYy5TY2VuZSh7XG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXJFbGVtZW50OiBzZWN0aW9uRG9tLFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IHRvcFRyaWdnZXIsXG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiBib3R0b21UcmlnZ2VyXG4gICAgICAgICAgICAgICAgfSkuYWRkVG8oY29udHJvbGxlcikub24oJ2VudGVyIGxlYXZlJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZS50eXBlID09PSAnZW50ZXInICYmICF2aWRlb09iai5oYXNDbGFzcygncGxheWVkJykgJiYgdmlkZW9PYmouaGFzQ2xhc3MoJ2xvYWRlZCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0RvbS5wbGF5KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2aWRlb09iai5hZGRDbGFzcygncGxheWVkJyk7IC8vUGxheSBvbmNlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB2aWRlb0RvbS5hZGRFdmVudExpc3RlbmVyKCdlbmRlZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGxvb3AgIT09ICd1bmRlZmluZWQnICYmIGxvb3AgPT09ICdubycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvT2JqLnJlbW92ZUNsYXNzKCdwbGF5ZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvT2JqLmF0dHIoJ2xvb3AnLCAnbG9vcCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9Eb20ucGxheSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICQod2luZG93KS5yZXNpemUoZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgLyogQWN0IG9uIHRoZSBldmVudCAqL1xuICAgICAgICAgICAgICAgICAgICB2aWRlb0JnU2VjdGlvbi51cGRhdGVQb3NpdGlvbihzZWN0aW9uT2JqLCB2aWRlb09iaiwgc2NlbmUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gdmlkZW9CZ1NlY3Rpb247XG59KCkpO1xuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbj0gICAgICAgSW5mbyBiYXIgcmVsYXRlZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xudmFyIGluZm9CYXIgPSAoZnVuY3Rpb24oKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIHZhciBpbmZvQmFyID0ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICgkKCcuaW5mby1iYXInKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgaW5mb0Jhci5zZXR1cFN0aWNreSgpO1xuICAgICAgICAgICAgICAgIGluZm9CYXIuc2V0dXBTY3JvbGwoKTtcbiAgICAgICAgICAgICAgICBpbmZvQmFyLnNldHVwVG9nZ2xlTW9iaWxlTWVudSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzZXR1cFN0aWNreTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAvLyBpbml0IGNvbnRyb2xsZXJcbiAgICAgICAgICAgIHZhciBzY2VuZSA9IG5ldyBTY3JvbGxNYWdpYy5TY2VuZSh7XG4gICAgICAgICAgICAgICAgdHJpZ2dlckVsZW1lbnQ6ICcuaW5mby1iYXInLFxuICAgICAgICAgICAgICAgIHRyaWdnZXJIb29rOiAnb25MZWF2ZSdcbiAgICAgICAgICAgIH0pLnNldFBpbignLmluZm8tYmFyJykuYWRkVG8oY29udHJvbGxlcik7XG4gICAgICAgICAgICB2YXIgJGhlYWRlckRpdiA9ICQoJy5pbmZvLWJhcicpO1xuICAgICAgICAgICAgdmFyICRyb3dEaXYgPSAkKHdpbmRvdyk7XG4gICAgICAgICAgICBpZiAoJCgnYm9keScpLmhhc0NsYXNzKCdydGwnKSkge1xuICAgICAgICAgICAgICAgICRyb3dEaXYuc2Nyb2xsKGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCRoZWFkZXJEaXYuY3NzKCdwb3NpdGlvbicpID09PSAnZml4ZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkaGVhZGVyRGl2LmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogJ2F1dG8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAkcm93RGl2LnNjcm9sbExlZnQoKSArICdweCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgJGhlYWRlckRpdi5jc3Moe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6ICdhdXRvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogJzBweCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICRyb3dEaXYuc2Nyb2xsKGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCRoZWFkZXJEaXYuY3NzKCdwb3NpdGlvbicpID09PSAnZml4ZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkaGVhZGVyRGl2LmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogLSRyb3dEaXYuc2Nyb2xsTGVmdCgpICsgJ3B4J1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkaGVhZGVyRGl2LmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogJzBweCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHNldHVwU2Nyb2xsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJy5zY3JvbGwtYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIHZhciBzY3JvbGxUb0l0ZW0gPSAkKHRoaXMpLmRhdGEoJ3Njcm9sbC10bycpLFxuICAgICAgICAgICAgICAgICAgICBzY3JvbGxQb3NpdGlvbjtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHNjcm9sbFRvSXRlbSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbW1vblNldHRpbmcuaXNNb2JpbGUoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5mb0Jhci50b2dnbGVNZW51KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsUG9zaXRpb24gPSAkKCcjJyArIHNjcm9sbFRvSXRlbSkub2Zmc2V0KCkudG9wIC0gJCgnLmluZm8tYmFyJykuaGVpZ2h0KCk7XG4gICAgICAgICAgICAgICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbFRvcDogc2Nyb2xsUG9zaXRpb25cbiAgICAgICAgICAgICAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHNldHVwVG9nZ2xlTW9iaWxlTWVudTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoY29tbW9uU2V0dGluZy5pc01vYmlsZSgpKSB7XG4gICAgICAgICAgICAgICAgJCgnLm0tdG9nZ2xlLW1lbnUnKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBpbmZvQmFyLnRvZ2dsZU1lbnUoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdG9nZ2xlTWVudTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKCcubS10b2dnbGUtbWVudScpLnRvZ2dsZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICQoJy5zY3JvbGwtYnRuLWdyb3VwJykudG9nZ2xlQ2xhc3MoJ3Nob3cnKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGluZm9CYXI7XG59KCkpO1xudmFyIGNvbW1vblNldHRpbmcgPSAoZnVuY3Rpb24oKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIHZhciBjb21tb25TZXR0aW5nID0ge1xuICAgICAgICBtb2JpbGVNYXhSZXNlcmx1dGlvbjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gNzIwO1xuICAgICAgICB9LFxuICAgICAgICBpc01vYmlsZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPD0gY29tbW9uU2V0dGluZy5tb2JpbGVNYXhSZXNlcmx1dGlvbigpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZm9yY2VQYWdlUmVsb2FkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vRm9yY2UgcGFnZSByZWxvYWQgd2hlbiBkZXNrdG9wIGFuZCBtb2JpbGUgc3dpdGNoXG4gICAgICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPD0gY29tbW9uU2V0dGluZy5tb2JpbGVNYXhSZXNlcmx1dGlvbigpICYmIGlzRGVza3RvcFZpZXcpIHtcbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA+IGNvbW1vblNldHRpbmcubW9iaWxlTWF4UmVzZXJsdXRpb24oKSAmJiAhaXNEZXNrdG9wVmlldykge1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG4gICAgcmV0dXJuIGNvbW1vblNldHRpbmc7XG59KCkpO1xuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbj0gICAgICAgRGV0ZWN0IFlvdXR1YmUgb3IgWW91a3UgcGx1Z2luICAgICAgICAgICAgICAgICAgICA9XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xudmFyIHlvdWt1VmlkZW8gPSAoZnVuY3Rpb24oKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIHZhciB5b3VrdVZpZGVvID0ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbih2aWQpIHtcbiAgICAgICAgICAgIHZhciBwbGF5ZXI7XG4gICAgICAgICAgICAvLyB5b3VrdVZpZGVvLnJlc2V0UGxheWVySGVpZ2h0KCk7XG4gICAgICAgICAgICBwbGF5ZXIgPSBuZXcgWUtVLlBsYXllcigncGxheWVyJywge1xuICAgICAgICAgICAgICAgIHN0eWxlaWQ6ICcwJyxcbiAgICAgICAgICAgICAgICBjbGllbnRfaWQ6ICcyYThmZGE0OGZjNzA5YjczJyxcbiAgICAgICAgICAgICAgICB2aWQ6IHZpZCxcbiAgICAgICAgICAgICAgICBuZXdQbGF5ZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxuICAgICAgICAgICAgICAgIHNob3dfcmVsYXRlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgZXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgICAgIG9uUGxheUVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RhbFZpZGVvLmhpZGVNb2RhbCgpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBvblBsYXllclJlYWR5OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHlvdWt1VmlkZW8ucmVzZXRQbGF5ZXJIZWlnaHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGFsVmlkZW8uc2hvd01vZGFsKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RhbFZpZGVvLnNldHVwQ2xvc2VNb2RhbEJ0bigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICAvLyAgICAgIEFjdCBvbiB0aGUgZXZlbnQgXG4gICAgICAgICAgICAvLyAgICAgeW91a3VWaWRlby5yZXNldFBsYXllckhlaWdodCgpO1xuICAgICAgICAgICAgLy8gfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHJlc2V0UGxheWVySGVpZ2h0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICgkKCcucGxheWVyLWNvbnRhaW5lcicpLmRhdGEoJ3Z0eXBlJykgPT09ICd5b3VrdScpIHtcbiAgICAgICAgICAgICAgICAkKCcjcGxheWVyJykuaGVpZ2h0KCQoJ3BpY3R1cmUnKS5oZWlnaHQoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB5b3VrdVZpZGVvO1xufSgpKTtcbnZhciB5b3V0dWJlVmlkZW8gPSAoZnVuY3Rpb24oKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIHZhciB5b3V0dWJlVmlkZW8gPSB7XG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKHZpZCkge1xuICAgICAgICAgICAgdmFyIHBsYXllcjtcblxuICAgICAgICAgICAgZnVuY3Rpb24gb25Zb3VUdWJlUGxheWVyQVBJUmVhZHkoKSB7XG4gICAgICAgICAgICAgICAgcGxheWVyID0gbmV3IFlULlBsYXllcigncGxheWVyJywge1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICczOTAnLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJzY0MCcsXG4gICAgICAgICAgICAgICAgICAgIHZpZGVvSWQ6IHZpZCxcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnb25SZWFkeSc6IG9uUGxheWVyUmVhZHksXG4gICAgICAgICAgICAgICAgICAgICAgICAnb25TdGF0ZUNoYW5nZSc6IG9uUGxheWVyU3RhdGVDaGFuZ2VcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvbiBvblBsYXllclJlYWR5KGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnBsYXlWaWRlbygpO1xuICAgICAgICAgICAgICAgIG1vZGFsVmlkZW8uc2hvd01vZGFsKCk7XG4gICAgICAgICAgICAgICAgbW9kYWxWaWRlby5zZXR1cENsb3NlTW9kYWxCdG4oKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZnVuY3Rpb24gb25QbGF5ZXJTdGF0ZUNoYW5nZShldmVudCkge1xuICAgICAgICAgICAgICAgIGlmIChldmVudC5kYXRhID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIG1vZGFsVmlkZW8uaGlkZU1vZGFsKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb25Zb3VUdWJlUGxheWVyQVBJUmVhZHkoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHlvdXR1YmVWaWRlbztcbn0oKSk7XG4oZnVuY3Rpb24oJCkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgICAkLmZuLnZpZGVvYmplY3QgPSBmdW5jdGlvbihjYWxsZXJTZXR0aW5ncykge1xuICAgICAgICB2YXIgc2V0dGluZ3MgPSAkLmV4dGVuZCh7XG4gICAgICAgICAgICAvL2ZsYXNoOiAnPG9iamVjdCB3aWR0aD1cIm15d2lkdGhcIiBoZWlnaHQ9XCJteWhlaWdodFwiIHR5cGU9XCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiIGRhdGE9XCJteXVybFwiIGlkPVwieW91a3VfcGxheWVyXCIgc3R5bGU9XCJ2aXNpYmlsaXR5OiB2aXNpYmxlO1wiPjxwYXJhbSBuYW1lPVwicXVhbGl0eVwiIHZhbHVlPVwiaGlnaFwiPjxwYXJhbSBuYW1lPVwid21vZGVcIiB2YWx1ZT1cIm9wYXF1ZVwiPjxwYXJhbSBuYW1lPVwiYWxsb3dTY3JpcHRBY2Nlc3NcIiB2YWx1ZT1cImFsd2F5c1wiPjxwYXJhbSBuYW1lPVwiU0NBTEVcIiB2YWx1ZT1cImV4YWN0Zml0XCI+PHBhcmFtIG5hbWU9XCJmbGFzaHZhcnNcIiB2YWx1ZT1cInBsYXlNb3ZpZT10cnVlJmlzQXV0b1BsYXk9dHJ1ZVwiPjwvb2JqZWN0PicsXG4gICAgICAgICAgICBmbGFzaDogJzxpZnJhbWUgd2lkdGg9XCJteXdpZHRoXCIgaGVpZ2h0PVwibXloZWlnaHRcIiBzcmM9XCJteXVybFwiIGZyYW1lYm9yZGVyPVwiMFwiIGFsbG93ZnVsbHNjcmVlbj48L2lmcmFtZT4nLFxuICAgICAgICAgICAgaWQ6ICdYTVRjd01ETXhOVEE0JyxcbiAgICAgICAgICAgIHVybDogJ3lvdXR1YmUnLFxuICAgICAgICAgICAgd2lkdGg6ICc1MDAnLFxuICAgICAgICAgICAgaGVpZ2h0OiAnMjgyJyxcbiAgICAgICAgICAgIHdhcm5pbmc6ICdZb3UgbmVlZCBGbGFzaCBQbGF5ZXIgZW5hYmxlZC4nXG4gICAgICAgIH0sIGNhbGxlclNldHRpbmdzIHx8IHt9KTtcbiAgICAgICAgdmFyIGNoZWNrRmxhc2ggPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vY2hlY2tzIGlmIGZsYXNoIGlzIGluc3RhbGxlZC9lbmFibGVkIG9uIHRoZSBicm93c2VyXG4gICAgICAgICAgICB2YXIgaGFzRmxhc2ggPSBmYWxzZTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdmFyIGZvID0gbmV3IEFjdGl2ZVhPYmplY3QoJ1Nob2Nrd2F2ZUZsYXNoLlNob2Nrd2F2ZUZsYXNoJyk7XG4gICAgICAgICAgICAgICAgaWYgKGZvKSB7XG4gICAgICAgICAgICAgICAgICAgIGhhc0ZsYXNoID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5hdmlnYXRvci5taW1lVHlwZXNbXCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGhhc0ZsYXNoID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaGFzRmxhc2g7XG4gICAgICAgIH07XG4gICAgICAgIHZhciBzaG93dmlkZW8gPSBmdW5jdGlvbih1cmkpIHtcbiAgICAgICAgICAgIHZhciBva0ZsYXNoID0gdHJ1ZSxcbiAgICAgICAgICAgICAgICB5ayxcbiAgICAgICAgICAgICAgICB5dGIgPSAnaHR0cCcgKyAoL15odHRwcy8udGVzdChsb2NhdGlvbi5wcm90b2NvbCkgPyAncycgOiAnJykgKyAnOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL215aWQ/YXV0b3BsYXk9MSZ3bW9kZT1vcGFxdWUnO1xuICAgICAgICAgICAgaWYgKCQoJ2h0bWwnKS5oYXNDbGFzcygnZGVza3RvcCcpKSB7XG4gICAgICAgICAgICAgICAgb2tGbGFzaCA9IGNoZWNrRmxhc2goKTtcbiAgICAgICAgICAgICAgICB5ayA9ICdodHRwOi8vc3RhdGljLnlvdWt1LmNvbS92L3N3Zi9xcGxheWVyLnN3Zj9WaWRlb0lEUz1teWlkPSZpc0F1dG9QbGF5PXRydWUmaXNTaG93UmVsYXRlZFZpZGVvPWZhbHNlJmVtYmVkaWQ9LSZzaG93QWQ9MCc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8veWsgPSAnaHR0cDovL3BsYXllci55b3VrdS5jb20vZW1iZWQvbXlpZCc7XG4gICAgICAgICAgICAgICAgeWsgPSAnaHR0cDovL3N0YXRpYy55b3VrdS5jb20vdjEuMC4wMTQ5L3Yvc3dmL2xvYWRlci5zd2Y/VmlkZW9JRFM9bXlpZCZxdWFsaXR5PWhpZ2gmaXNBdXRvUGxheT10cnVlJndpblR5cGU9YWRzaG93JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChva0ZsYXNoKSB7XG4gICAgICAgICAgICAgICAgLy8geW91a3Ugb3IgeW91dHViZVxuICAgICAgICAgICAgICAgIGlmICh1cmkubGVuZ3RoID09PSAxMSkge1xuICAgICAgICAgICAgICAgICAgICAvL1lvdXR1YmVcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3MuaWQgPSB5dGIucmVwbGFjZSgvbXlpZC8sIHVyaSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy9Zb3VrdVxuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5pZCA9IHlrLnJlcGxhY2UoL215aWQvLCB1cmkpO1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5mbGFzaCA9IFwiPGVtYmVkIHNyYz0nbXl1cmwnIGFsbG93RnVsbFNjcmVlbj0ndHJ1ZScgcXVhbGl0eT0naGlnaCcgd2lkdGg9J215d2lkdGgnIGhlaWdodD0nbXloZWlnaHQnIGFsaWduPSdtaWRkbGUnIGFsbG93U2NyaXB0QWNjZXNzPSdhbHdheXMnIHR5cGU9J2FwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoJz48L2VtYmVkPlwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdXJpID09PSAneW91a3UnID8gc2V0dGluZ3MuZmxhc2gucmVwbGFjZSgvbXl1cmwvLCBzZXR0aW5ncy5pZCkucmVwbGFjZSgvbXl3aWR0aC8sIHNldHRpbmdzLndpZHRoKS5yZXBsYWNlKC9teWhlaWdodC8sIHNldHRpbmdzLmhlaWdodCkgOiBzZXR0aW5ncy5mbGFzaC5yZXBsYWNlKC9teXVybC8sIHNldHRpbmdzLmlkKS5yZXBsYWNlKC9teXdpZHRoLywgc2V0dGluZ3Mud2lkdGgpLnJlcGxhY2UoL215aGVpZ2h0Lywgc2V0dGluZ3MuaGVpZ2h0KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNldHRpbmdzLndhcm5pbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB0aGlzLmVtcHR5KCkuaHRtbChzaG93dmlkZW8oc2V0dGluZ3MuaWQpKTtcbiAgICB9O1xufSkoalF1ZXJ5KTsiXX0=
